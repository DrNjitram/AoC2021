-module(day18_test).
-include_lib("eunit/include/eunit.hrl").

-define(INPUT, 
    [
        "[[[0,[5,8]],[[1,7],[9,6]]],[[4,[1,2]],[[1,4],2]]]",
        "[[[5,[2,8]],4],[5,[[9,9],0]]]",
        "[6,[[[6,2],[5,6]],[[7,6],[4,7]]]]",
        "[[[6,[0,7]],[0,9]],[4,[9,[9,0]]]]",
        "[[[7,[6,4]],[3,[1,3]]],[[[5,5],1],9]]",
        "[[6,[[7,3],[3,2]]],[[[3,8],[5,7]],4]]",
        "[[[[5,4],[7,7]],8],[[8,3],8]]",
        "[[9,3],[[9,9],[6,[4,9]]]]",
        "[[2,[[7,7],7]],[[5,8],[[9,3],[0,2]]]]",
        "[[[[5,2],5],[8,[3,7]]],[[5,[7,5]],[4,4]]]"
    ]
).

part1_test() ->
    ?assertEqual(143, day18:part1(["[[1,2],[[3,4],5]]"])),
    ?assertEqual(1384, day18:part1(["[[[[0,7],4],[[7,8],[6,0]]],[8,1]]"])),
    ?assertEqual(445, day18:part1(["[[[[1,1],[2,2]],[3,3]],[4,4]]"])),
    ?assertEqual(791, day18:part1(["[[[[3,0],[5,3]],[4,4]],[5,5]]"])),
    ?assertEqual(1137, day18:part1(["[[[[5,0],[7,4]],[5,5]],[6,6]]"])),
    ?assertEqual(3488, day18:part1(["[[[[8,7],[7,7]],[[8,6],[7,7]]],[[[0,7],[6,6]],[8,7]]]"])),
    %?assertEqual(4140, day18:part1(?INPUT)),
    ok.

